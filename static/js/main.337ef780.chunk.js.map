{"version":3,"sources":["reportWebVitals.ts","layouts/Layout.tsx","components/dashboard/Title.tsx","components/dashboard/Chart.tsx","components/dashboard/Deposits.tsx","components/dashboard/Orders.tsx","pages/Dashboard.tsx","pages/advertisers/Advertisers.tsx","helpers/unit.ts","pages/advertisers/AdvertiserDetail.tsx","components/QRcode/htmlQR.tsx","pages/QR/QR.tsx","routes/Root.ts","pages/ErrorPage.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Copyright","props","React","Typography","Object","assign","variant","color","align","LinkMui","href","Date","getFullYear","AppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","open","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","concat","enteringScreen","Drawer","MuiDrawer","_ref2","position","whiteSpace","boxSizing","overflowX","spacing","breakpoints","up","defaultTheme","createTheme","Title","component","gutterBottom","children","createData","time","amount","data","undefined","Chart","useTheme","ResponsiveContainer","LineChart","margin","top","right","bottom","left","XAxis","dataKey","stroke","palette","text","secondary","style","typography","body2","YAxis","Label","angle","textAnchor","fill","primary","body1","Line","isAnimationActive","type","main","dot","preventDefault","event","Deposits","sx","flex","Link","onClick","id","date","name","shipTo","paymentMethod","rows","Orders","Table","size","TableHead","TableRow","TableCell","TableBody","map","row","key","mt","Advertisers","setRows","convertKeysToLowerCase","obj","Array","isArray","item","keys","reduce","acc","toLowerCase","error","isLoading","useQuery","async","headers","Headers","fetch","method","json","Grid","container","xs","Paper","p","display","flexDirection","TableContainer","minWidth","aria-label","border","scope","first_name","last_name","url","category","datecreated","to","Outlet","AdvertiserDetail","params","useParams","useLoaderData","response","console","log","TextField","label","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","HTMLQRcode","Component","constructor","super","onImageChange","target","files","html5QrCode","Html5Qrcode","arrImgs","values","this","setState","loading","newArr","Promise","all","img","index","scanFile","decodedText","catch","err","images","onClickShowState","state","handleRenderLongLink","request","res","delay","resolve","reject","xhr","XMLHttpRequest","timeout","onreadystatechange","e","readyState","status","newImg","longUrl","responseURL","ontimeout","send","render","createElement","Fragment","multiple","onChange","length","element","Button","value","marginTop","Backdrop","CircularProgress","QR","arguments","testClick","router","createBrowserRouter","path","setOpen","toggleDrawer","ThemeProvider","Box","CssBaseline","Toolbar","pr","IconButton","edge","marginRight","MenuIcon","noWrap","flexGrow","Badge","badgeContent","NotificationsIcon","alignItems","justifyContent","px","ChevronLeftIcon","Divider","List","ListItemButton","ListItemIcon","DashboardIcon","ListItemText","ShoppingCartIcon","backgroundColor","mode","grey","height","overflow","Container","maxWidth","mb","pt","md","lg","ErrorPage","useRouteError","statusText","message","root","ReactDOM","createRoot","document","getElementById","queryClient","QueryClient","StrictMode","QueryClientProvider","client","RouterProvider","fallbackElement"],"mappings":"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","file":"static/js/main.337ef780.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import * as React from 'react';\r\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport Box from '@mui/material/Box';\r\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Badge from '@mui/material/Badge';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport LinkMui from '@mui/material/Link';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport DashboardIcon from '@mui/icons-material/Dashboard';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\n\r\nimport {\r\n    Await,\r\n    createBrowserRouter,\r\n    defer,\r\n    Form,\r\n    Link,\r\n    Outlet,\r\n    RouterProvider,\r\n    useAsyncError,\r\n    useAsyncValue,\r\n    useFetcher,\r\n    useFetchers,\r\n    useLoaderData,\r\n    useNavigation,\r\n    useParams,\r\n    useRevalidator,\r\n    useRouteError,\r\n} from \"react-router-dom\";\r\n\r\nfunction Copyright(props: any) {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n            {'Copyright © '}\r\n            <LinkMui color=\"inherit\" href=\"https://mui.com/\">\r\n                Your Website\r\n            </LinkMui>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst drawerWidth: number = 240;\r\n\r\ninterface AppBarProps extends MuiAppBarProps {\r\n    open?: boolean;\r\n}\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n    shouldForwardProp: (prop) => prop !== 'open',\r\n})<AppBarProps>(({ theme, open }) => ({\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    ...(open && {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    }),\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\r\n    ({ theme, open }) => ({\r\n        '& .MuiDrawer-paper': {\r\n            position: 'relative',\r\n            whiteSpace: 'nowrap',\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n            boxSizing: 'border-box',\r\n            ...(!open && {\r\n                overflowX: 'hidden',\r\n                transition: theme.transitions.create('width', {\r\n                    easing: theme.transitions.easing.sharp,\r\n                    duration: theme.transitions.duration.leavingScreen,\r\n                }),\r\n                width: theme.spacing(7),\r\n                [theme.breakpoints.up('sm')]: {\r\n                    width: theme.spacing(9),\r\n                },\r\n            }),\r\n        },\r\n    }),\r\n);\r\n\r\n// TODO remove, this demo shouldn't need to reset the theme.\r\nconst defaultTheme = createTheme();\r\n\r\nexport default function Layout() {\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const toggleDrawer = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={defaultTheme}>\r\n            <Box sx={{ display: 'flex' }}>\r\n                <CssBaseline />\r\n                <AppBar position=\"absolute\" open={open}>\r\n                    <Toolbar\r\n                        sx={{\r\n                            pr: '24px', // keep right padding when drawer closed\r\n                        }}\r\n                    >\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={toggleDrawer}\r\n                            sx={{\r\n                                marginRight: '36px',\r\n                                ...(open && { display: 'none' }),\r\n                            }}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography\r\n                            component=\"h1\"\r\n                            variant=\"h6\"\r\n                            color=\"inherit\"\r\n                            noWrap\r\n                            sx={{ flexGrow: 1 }}\r\n                        >\r\n                            Dashboard\r\n                        </Typography>\r\n                        <IconButton color=\"inherit\">\r\n                            <Badge badgeContent={4} color=\"secondary\">\r\n                                <NotificationsIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer variant=\"permanent\" open={open}>\r\n                    <Toolbar\r\n                        sx={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'flex-end',\r\n                            px: [1],\r\n                        }}\r\n                    >\r\n                        <IconButton onClick={toggleDrawer}>\r\n                            <ChevronLeftIcon />\r\n                        </IconButton>\r\n                    </Toolbar>\r\n                    <Divider />\r\n                    <List component=\"nav\">\r\n                        <ListItemButton component=\"a\" href=\"/react-github-page-1\">\r\n                            <ListItemIcon>\r\n                                <DashboardIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Dashboard\" />\r\n                        </ListItemButton>\r\n                        <ListItemButton component=\"a\" href=\"/react-github-page-1/advertisers\">\r\n                            <ListItemIcon>\r\n                                <ShoppingCartIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Advertisers\" />\r\n                        </ListItemButton>\r\n                        <ListItemButton component=\"a\" href=\"/react-github-page-1/qr\">\r\n                            <ListItemIcon>\r\n                                <ShoppingCartIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"QR\" />\r\n                        </ListItemButton>\r\n                    </List>\r\n                </Drawer>\r\n                <Box\r\n                    component=\"main\"\r\n                    sx={{\r\n                        backgroundColor: (theme) =>\r\n                            theme.palette.mode === 'light'\r\n                                ? theme.palette.grey[100]\r\n                                : theme.palette.grey[900],\r\n                        flexGrow: 1,\r\n                        height: '100vh',\r\n                        overflow: 'auto',\r\n                    }}\r\n                >\r\n                    <Toolbar />\r\n                    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n                        <Grid container spacing={3}>\r\n                            <Outlet />\r\n                        </Grid>\r\n                        <Copyright sx={{ pt: 4 }} />\r\n                    </Container>\r\n                </Box>\r\n            </Box>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n","import * as React from 'react';\nimport Typography from '@mui/material/Typography';\n\ninterface TitleProps {\n  children?: React.ReactNode;\n}\n\nexport default function Title(props: TitleProps) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\n\n// Generate Sales Data\nfunction createData(time: string, amount?: number) {\n  return { time, amount };\n}\n\nconst data = [\n  createData('00:00', 0),\n  createData('03:00', 300),\n  createData('06:00', 600),\n  createData('09:00', 800),\n  createData('12:00', 1500),\n  createData('15:00', 2000),\n  createData('18:00', 2400),\n  createData('21:00', 2400),\n  createData('24:00', undefined),\n];\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  return (\n    <React.Fragment>\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis\n            dataKey=\"time\"\n            stroke={theme.palette.text.secondary}\n            style={theme.typography.body2}\n          />\n          <YAxis\n            stroke={theme.palette.text.secondary}\n            style={theme.typography.body2}\n          >\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{\n                textAnchor: 'middle',\n                fill: theme.palette.text.primary,\n                ...theme.typography.body1,\n              }}\n            >\n              Sales ($)\n            </Label>\n          </YAxis>\n          <Line\n            isAnimationActive={false}\n            type=\"monotone\"\n            dataKey=\"amount\"\n            stroke={theme.palette.primary.main}\n            dot={false}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}\n","import * as React from 'react';\nimport Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\nimport Title from './Title';\n\nfunction preventDefault(event: React.MouseEvent) {\n  event.preventDefault();\n}\n\nexport default function Deposits() {\n  return (\n    <React.Fragment>\n      <Title>Recent Deposits</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        $3,024.00\n      </Typography>\n      <Typography color=\"text.secondary\" sx={{ flex: 1 }}>\n        on 15 March, 2019\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View balance\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","import * as React from 'react';\nimport Link from '@mui/material/Link';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Title from './Title';\n\n// Generate Order Data\nfunction createData(\n  id: number,\n  date: string,\n  name: string,\n  shipTo: string,\n  paymentMethod: string,\n  amount: number,\n) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(\n    0,\n    '16 Mar, 2019',\n    'Elvis Presley',\n    'Tupelo, MS',\n    'VISA ⠀•••• 3719',\n    312.44,\n  ),\n  createData(\n    1,\n    '16 Mar, 2019',\n    'Paul McCartney',\n    'London, UK',\n    'VISA ⠀•••• 2574',\n    866.99,\n  ),\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n  createData(\n    3,\n    '16 Mar, 2019',\n    'Michael Jackson',\n    'Gary, IN',\n    'AMEX ⠀•••• 2000',\n    654.39,\n  ),\n  createData(\n    4,\n    '15 Mar, 2019',\n    'Bruce Springsteen',\n    'Long Branch, NJ',\n    'VISA ⠀•••• 5919',\n    212.79,\n  ),\n];\n\nfunction preventDefault(event: React.MouseEvent) {\n  event.preventDefault();\n}\n\nexport default function Orders() {\n  \n  return (\n    <React.Fragment>\n      <Title>Recent Orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{`$${row.amount}`}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <Link color=\"primary\" href=\"#\" onClick={preventDefault} sx={{ mt: 3 }}>\n        See more orders\n      </Link>\n    </React.Fragment>\n  );\n}\n","import * as React from 'react';\r\nimport { createTheme } from '@mui/material/styles';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Chart from '../components/dashboard/Chart';\r\nimport Deposits from '../components/dashboard/Deposits';\r\nimport Orders from '../components/dashboard/Orders';\r\n\r\n// TODO remove, this demo shouldn't need to reset the theme.\r\nconst defaultTheme = createTheme();\r\n\r\nexport default function Dashboard() {\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={3}>\r\n                {/* Chart */}\r\n                <Grid item xs={12} md={8} lg={9}>\r\n                    <Paper\r\n                        sx={{\r\n                            p: 2,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            height: 240,\r\n                        }}\r\n                    >\r\n                        <Chart />\r\n                    </Paper>\r\n                </Grid>\r\n                {/* Recent Deposits */}\r\n                <Grid item xs={12} md={4} lg={3}>\r\n                    <Paper\r\n                        sx={{\r\n                            p: 2,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            height: 240,\r\n                        }}\r\n                    >\r\n                        <Deposits />\r\n                    </Paper>\r\n                </Grid>\r\n                {/* Recent Orders */}\r\n                <Grid item xs={12}>\r\n                    <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column' }}>\r\n                        <Orders />\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport { useQuery } from 'react-query';\r\nimport { DataGrid, GridColDef } from '@mui/x-data-grid';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Advertiser } from '../../types/Advertiser';\r\nimport { Link, Outlet } from 'react-router-dom';\r\n\r\nconst Advertisers = () => {\r\n    const [rows, setRows] = React.useState<Advertiser[]>([]);\r\n\r\n    const fetchData = async () => {\r\n        const url = 'https://bachvu.io.vn/api/api/v1/advertisers/?maxRows=100&startRow=1';\r\n        const headers = new Headers({\r\n            'Accept': 'application/json'\r\n        });\r\n        const response = await fetch(url, {\r\n            method: 'GET',\r\n            headers: headers\r\n        });\r\n        return response.json();\r\n    };\r\n\r\n    const convertKeysToLowerCase: any = (obj: any) => {\r\n        if (!obj || typeof obj !== 'object') {\r\n            return obj;\r\n        }\r\n\r\n        if (Array.isArray(obj)) {\r\n            return obj.map(item => convertKeysToLowerCase(item));\r\n        }\r\n\r\n        return Object.keys(obj).reduce((acc: any, key) => {\r\n            const newKey = key.toLowerCase();\r\n            acc[newKey] = convertKeysToLowerCase(obj[key]);\r\n            return acc;\r\n        }, {});\r\n    }\r\n\r\n    const { data, error, isLoading } = useQuery('data', fetchData);\r\n\r\n    // const columns: GridColDef[] = [\r\n    //     {\r\n    //         field: 'first_name',\r\n    //         headerName: 'First name',\r\n    //     },\r\n    //     {\r\n    //         field: 'last_name',\r\n    //         headerName: 'Last name',\r\n    //     },\r\n    //     {\r\n    //         field: 'url',\r\n    //         headerName: 'URL',\r\n    //     },\r\n    //     {\r\n    //         field: 'category',\r\n    //         headerName: 'Category',\r\n    //     },\r\n    //     {\r\n    //         field: 'datecreated',\r\n    //         headerName: 'Date created',\r\n    //     },\r\n    // ];\r\n\r\n    React.useEffect(() => {\r\n        if (data) {\r\n            setRows(convertKeysToLowerCase(data));\r\n        }\r\n    }, [data]);\r\n\r\n    if (isLoading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: query false</div>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column' }}>\r\n                        <TableContainer component={Paper}>\r\n                            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>First name</TableCell>\r\n                                        <TableCell>Last name</TableCell>\r\n                                        <TableCell align=\"right\">URL</TableCell>\r\n                                        <TableCell align=\"right\">Category</TableCell>\r\n                                        <TableCell align=\"right\">Date created</TableCell>\r\n                                        <TableCell align=\"right\">Action</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {rows.map((row) => (\r\n                                        <TableRow\r\n                                            key={row.id}\r\n                                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                        >\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {row.first_name}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{row.last_name}</TableCell>\r\n                                            <TableCell align=\"right\">{row.url}</TableCell>\r\n                                            <TableCell align=\"right\">{row.category}</TableCell>\r\n                                            <TableCell align=\"right\">{row.datecreated}</TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                <Link to={`/react-github-page-1/advertisers/${row.id}`}>Detail</Link>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Paper>\r\n                    <Outlet />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Advertisers;\r\n","\r\nconst convertKeysToLowerCase: any = (obj: any) => {\r\n    if (!obj || typeof obj !== 'object') {\r\n        return obj;\r\n    }\r\n\r\n    if (Array.isArray(obj)) {\r\n        return obj.map(item => convertKeysToLowerCase(item));\r\n    }\r\n\r\n    return Object.keys(obj).reduce((acc: any, key) => {\r\n        const newKey = key.toLowerCase();\r\n        acc[newKey] = convertKeysToLowerCase(obj[key]);\r\n        return acc;\r\n    }, {});\r\n}\r\n\r\nexport {\r\n    convertKeysToLowerCase\r\n}","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport { useQuery } from 'react-query';\r\nimport { DataGrid, GridColDef } from '@mui/x-data-grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport { convertKeysToLowerCase } from '../../helpers/unit';\r\nimport {\r\n    Await,\r\n    createBrowserRouter,\r\n    defer,\r\n    Form,\r\n    Link,\r\n    Outlet,\r\n    RouterProvider,\r\n    useAsyncError,\r\n    useAsyncValue,\r\n    useFetcher,\r\n    useFetchers,\r\n    useLoaderData,\r\n    useNavigation,\r\n    useParams,\r\n    useRevalidator,\r\n    useRouteError,\r\n  } from 'react-router-dom';\r\n\r\nconst AdvertiserDetail = () => {\r\n\r\n    let params = useParams();\r\n    let todo = useLoaderData() as string;\r\n    const [rows, setRows] = React.useState([]);\r\n\r\n    const fetchData = async () => {\r\n        const url = 'https://bachvu.io.vn/api/api/v1/advertisers/?maxRows=10&startRow=1';\r\n        const headers = new Headers({\r\n            'Accept': 'application/json'\r\n        });\r\n        const response = await fetch(url, {\r\n            method: 'GET',\r\n            headers: headers\r\n        });\r\n        console.log(params);\r\n        return response.json();\r\n    };\r\n\r\n    const { data, error, isLoading } = useQuery('data', fetchData);\r\n\r\n    React.useEffect(() => {\r\n        if (data) {\r\n            setRows(convertKeysToLowerCase(data));\r\n        }\r\n    }, [data]);\r\n\r\n    if (isLoading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: query false</div>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column' }}>\r\n                        <TextField id=\"standard-basic\" label=\"Standard\" variant=\"standard\" />\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AdvertiserDetail;\r\n","import React, { Component } from 'react';\r\n// To use Html5QrcodeScanner (more info below)\r\nimport { Html5QrcodeScanner } from \"html5-qrcode\";\r\n// To use Html5Qrcode (more info below)\r\nimport { Html5Qrcode } from \"html5-qrcode\";\r\n//export excel\r\nimport ReactExport from \"react-export-excel\";\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { Backdrop, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\n\r\ninterface MyProps { }\r\ninterface MyState {\r\n    delay: number;\r\n    loading: boolean;\r\n    images: Image[];\r\n}\r\n\r\ninterface Image {\r\n    name: string;\r\n    url: string;\r\n    longUrl?: string;\r\n}\r\n\r\nconst qrcodeRegionId = \"html5qr-code-full-region\";\r\n\r\nexport default class HTMLQRcode extends Component<MyProps, MyState> {\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = {\r\n            delay: 100,\r\n            loading: false,\r\n            images: []\r\n        }\r\n    }\r\n    \r\n    onImageChange = async (event: any) => {\r\n        if (event.target.files && event.target.files[0]) {\r\n            const html5QrCode = new Html5Qrcode(qrcodeRegionId, false);\r\n            const arrImgs = Object.values(event.target.files)\r\n            this.setState({ loading: true });\r\n            const newArr = await Promise.all(arrImgs.map((img: any, index) => {\r\n                return html5QrCode.scanFile(img, false).then(decodedText => {\r\n                    const newImg: Image = {\r\n                        name: img.name,\r\n                        url: decodedText\r\n                    };\r\n                    return newImg;\r\n                })\r\n                    .catch(err => {\r\n                        // failure, handle it.\r\n                        console.log(`Error scanning file. Reason: ${err}`)\r\n                        return { name: img.name, url: \"\" };\r\n                    });\r\n            }))\r\n            this.setState({\r\n                images: newArr, loading: false\r\n            })\r\n        }\r\n    };\r\n\r\n    onClickShowState = (event: any) => {\r\n        console.log(this.state.images)\r\n    };\r\n\r\n    handleRenderLongLink = async (event: any) => {\r\n        this.setState({ loading: true });\r\n        const links = Promise.all(this.state.images.map((img: any, index) => {\r\n            return this.request(img)\r\n        })).then((res: any) => {\r\n            this.setState({\r\n                images: [...res], loading: false\r\n            })\r\n        })\r\n    }\r\n\r\n    request(img: Image) {\r\n        return new Promise(function (resolve, reject) {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.timeout = 30000;\r\n            xhr.onreadystatechange = function (e) {\r\n                if (xhr.readyState === 4) {\r\n                    if (xhr.status === 200) {\r\n                        const newImg: Image = {\r\n                            name: img.name,\r\n                            url: img.url,\r\n                            longUrl: xhr.responseURL\r\n                        };\r\n                        resolve(newImg);\r\n                    } else {\r\n                        console.log(xhr.status);\r\n                        reject(xhr.status)\r\n                    }\r\n                }\r\n            }\r\n            xhr.ontimeout = function () {\r\n                reject('timeout')\r\n            }\r\n            xhr.open('get', img.url, true)\r\n            xhr.send();\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    name=\"myImage\"\r\n                                    multiple\r\n                                    onChange={this.onImageChange}\r\n                                />\r\n                                {\r\n                                    this.state.images.length > 0 && <ExcelFile element={<Button variant=\"contained\" >export excel</Button>}>\r\n                                        <ExcelSheet data={this.state.images} name=\"QR\">\r\n                                            <ExcelColumn label=\"Name\" value=\"name\" />\r\n                                            <ExcelColumn label=\"URL\" value=\"url\" />\r\n                                            <ExcelColumn label=\"Long URL\" value=\"longUrl\" />\r\n                                        </ExcelSheet>\r\n                                    </ExcelFile>\r\n                                }\r\n                            </Grid>\r\n                            <Grid item xs={12} style={{ marginTop: 10 }}>\r\n                                {\r\n                                    this.state.images.length > 0 && <Button variant=\"contained\" color=\"success\" onClick={this.handleRenderLongLink}>Render Link</Button>\r\n                                }\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        {\r\n                            this.state.images.length > 0 && <h3>List result</h3>\r\n                        }\r\n                        {\r\n                            this.state.images.length > 0 && <TableContainer component={Paper}>\r\n                                <Table sx={{ minWidth: 300 }} aria-label=\"simple table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Name</TableCell>\r\n                                            <TableCell>Short URL</TableCell>\r\n                                            <TableCell >Long URL</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {this.state.images.map((row, index) => (\r\n                                            <TableRow\r\n                                                key={`table-data-` + index}\r\n                                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                            >\r\n                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                    {row.name}\r\n                                                </TableCell>\r\n                                                <TableCell >{row.url}</TableCell>\r\n                                                <TableCell >{row.longUrl}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        }\r\n\r\n                        <div style={{ display: \"none\" }} id={qrcodeRegionId}></div>\r\n                    </Grid>\r\n                </Grid>\r\n                <Backdrop\r\n                    sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n                    open={this.state.loading}\r\n                    // onClick={handleClose}\r\n                >\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n            </>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport { Outlet } from 'react-router-dom';\r\nimport HTMLQRcode from '../../components/QRcode/htmlQR';\r\n\r\nexport default class QR extends Component {\r\n\r\n    testClick = () => {\r\n        console.log(this)\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column' }}>\r\n                            <HTMLQRcode />\r\n                        </Paper>\r\n                        <Outlet />\r\n                    </Grid>\r\n                </Grid>\r\n            </>\r\n        );\r\n    }\r\n}","import {\r\n    createBrowserRouter,\r\n    RouterProvider,\r\n} from \"react-router-dom\";\r\nimport Layout from \"../layouts/Layout\";\r\nimport Dashboard from \"../pages/Dashboard\";\r\nimport Advertisers from \"../pages/advertisers/Advertisers\";\r\nimport AdvertiserDetail from \"../pages/advertisers/AdvertiserDetail\";\r\nimport QR from \"../pages/QR/QR\";\r\n\r\nexport const router = createBrowserRouter([\r\n    {\r\n        path: \"/react-github-page-1\",\r\n        Component: Layout,\r\n        children: [\r\n            {\r\n                index: true,\r\n                // loader: homeLoader,\r\n                Component: QR,\r\n            },\r\n            {\r\n              path: \"advertisers\",\r\n            //   action: todosAction,\r\n            //   loader: todosLoader,\r\n              Component: Advertisers,\r\n            //   ErrorBoundary: TodosBoundary,\r\n                children: [\r\n                {\r\n                  path: \":id\",\r\n                //   loader: todoLoader,\r\n                  Component: AdvertiserDetail,\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              path: \"qr\",\r\n              Component: Dashboard,\r\n            }\r\n            // {\r\n            //   path: \"deferred\",\r\n            //   loader: deferredLoader,\r\n            //   Component: DeferredPage,\r\n            // },\r\n        ],\r\n    },\r\n]);","import React, { Component }  from 'react';\r\nimport { useRouteError } from \"react-router-dom\";\r\n\r\nexport default function ErrorPage() {\r\n  const error: any = useRouteError();\r\n  console.error(error);\r\n\r\n  return (\r\n    <div id=\"error-page\">\r\n      <h1>Oops!</h1>\r\n      <p>Sorry, an unexpected error has occurred.</p>\r\n      <p>\r\n        <i>{error.statusText || error.message}</i>\r\n      </p>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\nimport {\r\n  createBrowserRouter,\r\n  RouterProvider,\r\n} from \"react-router-dom\";\r\nimport { router } from \"./routes/Root\";\r\nimport ErrorPage from \"./pages/ErrorPage\";\r\n\r\n// const router = createBrowserRouter([\r\n//   {\r\n//     path: \"/react-github-page-1\",\r\n//     Component: <Root />,\r\n//     errorElement: <ErrorPage />,\r\n//   },\r\n//   {\r\n//     path: \"react-github-page-1/dashboard\",\r\n//     element: <Dashboard />,\r\n//   },\r\n// ]);\r\n\r\n\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nconst queryClient = new QueryClient();\r\nroot.render(\r\n  <React.StrictMode>\r\n    <QueryClientProvider client={queryClient}>\r\n      <RouterProvider router={router}  fallbackElement={<ErrorPage />}/>\r\n    </QueryClientProvider>,\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}